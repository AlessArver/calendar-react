{"version":3,"sources":["components/Calendar/CalendarPopup/CalendarPopup.module.sass","components/Header/Header.module.sass","layouts/Main/MainLayout.module.sass","components/ScheduleEvent/ScheduleEvent.module.sass","components/Calendar/Calendar.tsx","routes/routesNames.tsx","components/Header/Header.tsx","layouts/Main/MainLayout.tsx","store/calendar.ts","components/Calendar/CalendarHeader/CalendarHeader.tsx","hooks/useToggle.ts","components/Calendar/CalendarPopup/CalendarPopup.tsx","components/ScheduleEvent/ScheduleEvent.tsx","components/Calendar/CalendarGrid/CalendarGrid.tsx","hocs/Routes.tsx","pages/calendar/CalendarPage.tsx","pages/index/IndexPage.tsx","routes/index.tsx","App.tsx","index.tsx","components/Calendar/CalendarHeader/CalendarHeader.module.sass","components/Calendar/CalendarGrid/CalendarGrid.module.sass"],"names":["module","exports","CalendarViewEnum","CALENDAR_PAGE_ROUTE","rightItems","title","path","Header","className","s","HeaderCol","map","rightItem","to","HeaderItem","MainLayout","children","MainLayoutChildren","eventsAtom","atom","id","dateFrom","dateTo","CalendarHeader","days","today","beforeHandler","todayHandler","nextHandler","onChangeCalendarView","isMonth","currentValue","useState","value","setValue","onToggle","onSet","onUnset","useToggle","startDay","endDay","length","CalendarHeaderCol","CalendarHeaderMonth","format","CalendarHeaderRange","moment","onClick","CalendarHeaderArrow","CalendarHeaderArrowIcon","CalendarHeaderToday","onChange","Month","Week","checked","onColor","uncheckedIcon","checkedIcon","CalendarHeaderSwitch","CalendarPopup","React","forwardRef","ref","style","onClose","CalendarPopupHeader","CalendarPopupClose","CalendarPopupContent","CalendarPopupTitle","CalendarPopupDate","unix","ScheduleEvent","CalendarGrid","items","dayArr","chosenEvent","setChosenEvent","handleChoseEvent","isCurrentDay","day","isSame","item","index","clsx","CalendarGridItem","CalendarGridItem_active","CalendarGridDay","marginTop","CalendarGridDayWeekName","add","CalendarGridDayNumber","CalendarGridDayNumber_active","CalendarGridEvents","CalendarGridEvents_flex","some","i","filter","event","clone","endOf","indexEvent","visible","onClickOutside","content","placement","routes","Calendar","setDays","setToday","setStartDay","setDayArr","useEffect","Array","_","startOf","prev","subtract","newDays","CalendarPage","useAtom","events","IndexPage","navigate","useNavigate","AppRoutes","element","layout","props","updateLocale","week","dow","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,oBAAsB,2CAA2C,mBAAqB,0CAA0C,mBAAqB,4C,mBCA5ND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,WAAa,6B,mBCArGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,mBAAqB,yC,mBCAnFD,EAAOC,QAAU,CAAC,cAAgB,uC,gECMtBC,E,8GCLCC,EAAsB,Y,iBCW7BC,EAA2B,CAC/B,CAAEC,MAAO,WAAYC,KAAMH,IAKhBI,EAAgC,WAC3C,OACE,sBAAKC,UAAWC,IAAEF,OAAlB,UACE,qBAAKC,UAAWC,IAAEC,YAClB,qBAAKF,UAAWC,IAAEC,UAAlB,SACGN,EAAWO,KAAI,SAACC,GAAD,OACdA,EAAUN,KACR,cAAC,IAAD,CAEEO,GAAID,EAAUN,KACdE,UAAWC,IAAEK,WAHf,SAKGF,EAAUP,OAJNO,EAAUP,OAOjB,qBAA2BG,UAAWC,IAAEK,WAAxC,SACGF,EAAUP,OADHO,EAAUP,gBC1BnBU,EAAwC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtD,OACE,sBAAKR,UAAWC,IAAEM,WAAlB,UACE,cAAC,EAAD,IACA,qBAAKP,UAAWC,IAAEQ,mBAAlB,SAAuCD,Q,eCRhCE,EAAaC,eAAuB,CAC/C,CACEC,GAAI,IACJC,SAAU,WACVC,OAAQ,WACRjB,MAAO,6EAET,CACEe,GAAI,IACJC,SAAU,WACVC,OAAQ,UACRjB,MAAO,wCAET,CACEe,GAAI,IACJC,SAAU,WACVC,OAAQ,WACRjB,MAAO,oC,2ECAEkB,EAAgD,SAAC,GAQvD,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,cACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,qBAGMC,EC5BiB,WAAgD,IAA/CC,EAA8C,0DAC5CC,mBAASD,GADmC,mBAC/DE,EAD+D,KACxDC,EADwD,KAGtE,MAAO,CACLD,QACAE,SAAU,kBAAMD,GAAUD,IAC1BG,MAAO,kBAAMF,GAAS,IACtBG,QAAS,kBAAMH,GAAS,KDqBVI,CADZ,EADJR,SAGMS,EAAWf,EAAK,GAChBgB,EAAShB,EAAKA,EAAKiB,OAAS,GAYlC,OACE,sBAAKjC,UAAWC,IAAEc,eAAlB,UACE,sBAAKf,UAAWC,IAAEiC,kBAAlB,UACE,qBAAKlC,UAAWC,IAAEkC,oBAAlB,SAAwClB,EAAMmB,OAAO,UACrD,sBAAKpC,UAAWC,IAAEoC,oBAAlB,UACGC,IAAOP,GAAUK,OAAO,UAD3B,KACwC,IACrCE,IAAON,GAAQI,OAAO,gBAG3B,sBAAKpC,UAAWC,IAAEiC,kBAAlB,UACE,qBAAKK,QAASrB,EAAelB,UAAWC,IAAEuC,oBAA1C,SACE,cAAC,IAAD,CAAexC,UAAWC,IAAEwC,4BAE9B,qBAAKF,QAASpB,EAAcnB,UAAWC,IAAEyC,oBAAzC,wDAGA,qBAAKH,QAASnB,EAAapB,UAAWC,IAAEuC,oBAAxC,SACE,cAAC,IAAD,CAAgBxC,UAAWC,IAAEwC,4BAE/B,cAAC,IAAD,CACEE,SA9BmB,SAAClB,GACrBA,GAIHH,EAAQM,QACRP,EAAqB3B,EAAiBkD,SAJtCtB,EAAQO,UACRR,EAAqB3B,EAAiBmD,QA4BlCC,QAASxB,EAAQG,MACjBsB,QAAQ,UACRC,eAAe,EACfC,aAAa,EACbjD,UAAWC,IAAEiD,8B,0EEzDVC,EAAgBC,IAAMC,YAGjC,WAA8CC,GAAS,IAApDC,EAAmD,EAAnDA,MAAO1D,EAA4C,EAA5CA,MAAOgB,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,OAAQ0C,EAAmB,EAAnBA,QACnC,OACE,sBAAKF,IAAKA,EAAKtD,UAAWC,IAAEkD,cAAeI,MAAOA,EAAlD,UACE,qBAAKvD,UAAWC,IAAEwD,oBAAlB,SACE,cAAC,IAAD,CAAWlB,QAASiB,EAASxD,UAAWC,IAAEyD,uBAE5C,sBAAK1D,UAAWC,IAAE0D,qBAAlB,UACE,qBAAK3D,UAAWC,IAAE2D,mBAAlB,SAAuC/D,IACvC,sBAAKG,UAAWC,IAAE4D,kBAAlB,UACGvB,IAAOwB,KAAKjD,GAAUuB,OAAO,aADhC,KAEGE,IAAOwB,KAAKhD,GAAQsB,OAAO,yB,iBCTzB2B,EAAgBX,IAAMC,YAGjC,WAAqBC,GAAS,IAA3BzD,EAA0B,EAA1BA,MAAO0C,EAAmB,EAAnBA,QACV,OACE,qBAAKA,QAASA,EAASvC,UAAWC,IAAE8D,cAAeT,IAAKA,EAAxD,SACGzD,OCFMmE,EAA4C,SAAC,GAKnD,IAJLhD,EAII,EAJJA,KACAiD,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAjD,EACI,EADJA,MACI,EACkCO,mBAAwB,MAD1D,mBACG2C,EADH,KACgBC,EADhB,KAGEC,EAAmB,SAAC5C,GAAD,OAA0B,WAI/C2C,EAHG3C,GAASA,IAAU0C,EAGP,KAFA1C,KAMb6C,EAAe,SAACC,GACpB,OAAOjC,MAASkC,OAAOD,EAAK,QAQ9B,OACE,qBAAKvE,UAAWC,IAAE+D,aAAlB,SACGE,EAAO/D,KAAI,SAACsE,EAAMC,GAAP,OACV,sBAEE1E,UAAW2E,YAAK1E,IAAE2E,iBAAH,eACZ3E,IAAE4E,yBAZWN,EAY8BE,EAZjBxD,EAAMuD,OAAOD,EAAK,YASjD,UAME,sBACEvE,UAAWC,IAAE6E,gBACbvB,MAAO,CAAEwB,UAAWL,GAAS,EAAT,OAAsB,KAF5C,UAIGA,EAAQ,GACP,qBAAK1E,UAAWC,IAAE+E,wBAAlB,SACG1C,IAAOmC,GAAMQ,IAAI,EAAG,KAAK7C,OAAO,QAGpCpB,IAAStB,EAAiBkD,OACzB,sBACE5C,UAAW2E,YAAK1E,IAAEiF,sBAAH,eACZjF,IAAEkF,6BAA+Bb,EAAaG,KAFnD,SAKGA,EAAKrC,OAAO,UAInB,qBACEpC,UAAW2E,YAAK1E,IAAEmF,mBAAH,eACZnF,IAAEoF,yBAlCSxE,EAmCV4D,EAAK5D,SAnCoBD,EAoCzB6D,EAAK7D,GAnCVqD,EAAMqB,MAAK,SAACC,GAAD,OAAOA,EAAE1E,WAAaA,GAAY0E,EAAE3E,KAAOA,QA+BvD,SAQGqD,EACEuB,QACC,SAACC,GAAD,OACEA,EAAM5E,UAAY4D,EAAKrC,OAAO,MAC9BqD,EAAM5E,UAAY4D,EAAKiB,QAAQC,MAAM,OAAOvD,OAAO,QAEtDjC,KAAI,SAACsF,EAAOG,GAAR,OACH,cAAC,IAAD,CAEEC,QAAS1B,IAAgBsB,EAAM7E,GAC/BkF,eAAgBzB,EAAiB,MACjC0B,QACE,cAAC5C,EAAD,aACEK,QAASa,EAAiB,OACtBoB,IAGRO,UAAU,QAVZ,SAYE,cAACjC,EAAD,aACExB,QAAS8B,EAAiBoB,EAAM7E,KAC5B6E,KAbDA,EAAM7E,WAxCd8D,GARU,IAAC7D,EAAeD,EAFf2D,S,SThCd7E,O,eAAAA,I,mBAAAA,M,KAQL,IUGgBuG,EVHVC,EAA4B,SAAC,GAAe,IAAbjC,EAAY,EAAZA,MAAY,EAC9BzC,mBAAS9B,EAAiBkD,OADI,mBAC/C5B,EAD+C,KACzCmF,EADyC,OAE5B3E,mBAASc,OAFmB,mBAE/CrB,EAF+C,KAExCmF,EAFwC,OAGtB5E,mBAASc,OAHa,mBAG/CP,EAH+C,KAGrCsE,EAHqC,OAI1B7E,mBAAgB,IAJU,mBAI/C0C,EAJ+C,KAIvCoC,EAJuC,KAMtDC,qBAAU,WACRD,EACE,YAAIE,MAAMxF,IAAOb,KAAI,SAACsG,EAAG/B,GAAJ,OACnBpC,IAAOrB,EAAMyF,QAAQ,MAAMhB,QAAQT,IAAIP,EAAO,WAGjD,CAAC1D,EAAMe,EAAUd,IAEpBsF,qBAAU,WACRF,EAAYpF,EAAMyE,QAAQgB,QAAQ,SAASA,QAAQ,WAClD,CAACzF,IAyBJ,OACE,gCACE,cAAC,EAAD,CACED,KAAMkD,EACNjD,MAAOA,EACPC,cA5BgB,WAChBF,IAAStB,EAAiBkD,MAC5BwD,GAAS,SAACO,GAAD,OAAUrE,IAAOqE,EAAM,UAAUjB,QAAQkB,SAAS,GAAI,QAE/DR,GAAS,SAACO,GAAD,OAAUrE,IAAOqE,EAAM,UAAUjB,QAAQkB,SAAS,EAAG,SAyB5DzF,aAtBe,WACnBiF,EAAS9D,QAsBLlB,YAnBc,WACdJ,IAAStB,EAAiBkD,MAC5BwD,GAAS,SAACO,GAAD,OAAUrE,IAAOqE,EAAM,UAAUjB,QAAQT,IAAI,GAAI,QAE1DmB,GAAS,SAACO,GAAD,OAAUrE,IAAOqE,EAAM,UAAUjB,QAAQT,IAAI,EAAG,SAgBvD5D,qBAZuB,SAACwF,GAC5BV,EAAQU,IAYJvF,QAASN,IAAStB,EAAiBkD,QAErC,cAAC,EAAD,CAAcsB,OAAQA,EAAQlD,KAAMA,EAAMiD,MAAOA,EAAOhD,MAAOA,QW5DxD6F,EAA4C,WAAO,IAAD,EAC5CC,kBAAQrG,GAAlBsG,EADsD,oBAG7D,OACE,mCACE,cAAC,EAAD,CAAU/C,MAAO+C,OCLVC,EAAsC,WACjD,IAAMC,EAAWC,cAMjB,OAJAZ,qBAAU,WACRW,EAASvH,KACR,CAACuH,IAEG,8BCKIE,GHDUnB,EGZK,CAC1B,CACEnG,KZR4B,IYS5BuH,QAAS,cAAC,EAAD,IACTC,OAAQ/G,GAEV,CACET,KAAMH,EACN0H,QAAS,cAAC,EAAD,IACTC,OAAQ/G,IHGmC,kBAE3C,cAAC,IAAD,UACG0F,EAAO9F,KAAI,SAACoH,EAAOhC,GAClB,IAAM8B,EAAUE,EAAMD,OACpB,cAACC,EAAMD,OAAP,UAAeC,EAAMF,UAErBE,EAAMF,QAGR,OAAO,cAAC,IAAD,2BAA4BE,GAA5B,IAAmCF,QAASA,IAAhCE,EAAMzH,aItBjCwC,IAAOkF,aAAa,KAAM,CACxBC,KAAM,CAAEC,IAAK,GACbC,SAAU,CACRC,QAAS,mCACTC,QAAS,+CACTC,QAAS,yCACTC,SAAU,oFACVC,SAAU,gGACVC,SAAU,OAIP,IAAMC,GAAM,WACjB,OACE,mCACE,cAACd,EAAD,OCbNe,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,kBAAzB,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U,kBCX1BhJ,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,kBAAoB,0CAA0C,oBAAsB,4CAA4C,oBAAsB,4CAA4C,oBAAsB,4CAA4C,wBAA0B,gDAAgD,oBAAsB,4CAA4C,qBAAuB,+C,kBCAjfD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,uCAAuC,wBAA0B,8CAA8C,gBAAkB,sCAAsC,sBAAwB,4CAA4C,sBAAwB,4CAA4C,6BAA+B,mDAAmD,mBAAqB,yCAAyC,wBAA0B,iD","file":"static/js/main.3a9339cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarPopup\":\"CalendarPopup_CalendarPopup__myIlk\",\"CalendarPopupHeader\":\"CalendarPopup_CalendarPopupHeader__1SD9r\",\"CalendarPopupClose\":\"CalendarPopup_CalendarPopupClose__FtTYq\",\"CalendarPopupTitle\":\"CalendarPopup_CalendarPopupTitle__s5wAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header___JlYX\",\"HeaderCol\":\"Header_HeaderCol__44H0U\",\"HeaderItem\":\"Header_HeaderItem__1-j5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainLayout\":\"MainLayout_MainLayout__PhSL5\",\"MainLayoutChildren\":\"MainLayout_MainLayoutChildren__319iM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScheduleEvent\":\"ScheduleEvent_ScheduleEvent__h1Ci_\"};","import { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { CalendarHeader } from \"./CalendarHeader/CalendarHeader\";\r\nimport { CalendarGrid } from \"./CalendarGrid/CalendarGrid\";\r\nimport { IScheduleEvent } from \"../ScheduleEvent/ScheduleEvent\";\r\n\r\nexport enum CalendarViewEnum {\r\n  Week = 7,\r\n  Month = 21,\r\n}\r\n\r\ntype Props = {\r\n  items: IScheduleEvent[];\r\n};\r\nexport const Calendar: React.FC<Props> = ({ items }) => {\r\n  const [days, setDays] = useState(CalendarViewEnum.Month);\r\n  const [today, setToday] = useState(moment());\r\n  const [startDay, setStartDay] = useState(moment());\r\n  const [dayArr, setDayArr] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    setDayArr(\r\n      [...Array(days)].map((_, index) =>\r\n        moment(today.startOf(\"w\")).clone().add(index, \"d\")\r\n      )\r\n    );\r\n  }, [days, startDay, today]);\r\n\r\n  useEffect(() => {\r\n    setStartDay(today.clone().startOf(\"month\").startOf(\"week\"));\r\n  }, [today]);\r\n\r\n  const beforeHandler = () => {\r\n    if (days === CalendarViewEnum.Month) {\r\n      setToday((prev) => moment(prev, \"d MMMM\").clone().subtract(21, \"d\"));\r\n    } else {\r\n      setToday((prev) => moment(prev, \"d MMMM\").clone().subtract(1, \"w\"));\r\n    }\r\n  };\r\n  const todayHandler = () => {\r\n    setToday(moment());\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    if (days === CalendarViewEnum.Month) {\r\n      setToday((prev) => moment(prev, \"d MMMM\").clone().add(21, \"d\"));\r\n    } else {\r\n      setToday((prev) => moment(prev, \"d MMMM\").clone().add(1, \"w\"));\r\n    }\r\n  };\r\n\r\n  const onChangeCalendarView = (newDays: CalendarViewEnum) => {\r\n    setDays(newDays);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CalendarHeader\r\n        days={dayArr}\r\n        today={today}\r\n        beforeHandler={beforeHandler}\r\n        todayHandler={todayHandler}\r\n        nextHandler={nextHandler}\r\n        onChangeCalendarView={onChangeCalendarView}\r\n        isMonth={days === CalendarViewEnum.Month}\r\n      />\r\n      <CalendarGrid dayArr={dayArr} days={days} items={items} today={today} />\r\n    </div>\r\n  );\r\n};\r\n","export const INDEX_PAGE_ROUTE = \"/\";\r\n\r\nexport const CALENDAR_PAGE_ROUTE = \"/calendar\";\r\n","import { title } from \"process\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CALENDAR_PAGE_ROUTE } from \"routes/routesNames\";\r\n\r\nimport s from \"./Header.module.sass\";\r\n\r\ninterface HeaderItem {\r\n  title: string;\r\n  path?: string;\r\n}\r\n\r\nconst rightItems: HeaderItem[] = [\r\n  { title: \"calendar\", path: CALENDAR_PAGE_ROUTE },\r\n];\r\n\r\nexport interface HeaderProps {}\r\n\r\nexport const Header: React.FC<HeaderProps> = () => {\r\n  return (\r\n    <div className={s.Header}>\r\n      <div className={s.HeaderCol}></div>\r\n      <div className={s.HeaderCol}>\r\n        {rightItems.map((rightItem) =>\r\n          rightItem.path ? (\r\n            <Link\r\n              key={rightItem.title}\r\n              to={rightItem.path}\r\n              className={s.HeaderItem}\r\n            >\r\n              {rightItem.title}\r\n            </Link>\r\n          ) : (\r\n            <div key={rightItem.title} className={s.HeaderItem}>\r\n              {rightItem.title}\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport s from \"./MainLayout.module.sass\";\r\n\r\nimport { Header } from \"components/Header/Header\";\r\n\r\nexport interface MainLayoutProps {}\r\n\r\nexport const MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className={s.MainLayout}>\r\n      <Header />\r\n      <div className={s.MainLayoutChildren}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { atom } from \"jotai\";\r\n\r\nimport { IScheduleEvent } from \"./../components/ScheduleEvent/ScheduleEvent\";\r\n\r\nexport const eventsAtom = atom<IScheduleEvent[]>([\r\n  {\r\n    id: \"1\",\r\n    dateFrom: 1638187200,\r\n    dateTo: 1638194400,\r\n    title: \"Вынести мусор\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    dateFrom: 1638280800,\r\n    dateTo: 1638288000,\r\n    title: \"Работа\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    dateFrom: 1639130400,\r\n    dateTo: 1639137600,\r\n    title: \"Учеба\",\r\n  },\r\n]);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Switch from \"react-switch\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nimport s from \"./CalendarHeader.module.sass\";\r\n\r\nimport { CalendarViewEnum } from \"../Calendar\";\r\nimport clsx from \"clsx\";\r\nimport { useToggle } from \"hooks/useToggle\";\r\n\r\nexport type CalendarHeaderProps = {\r\n  days: any[];\r\n  today: moment.Moment;\r\n  beforeHandler: () => void;\r\n  todayHandler: () => void;\r\n  nextHandler: () => void;\r\n  onChangeCalendarView: (newDays: CalendarViewEnum) => void;\r\n  isMonth: boolean;\r\n};\r\nexport const CalendarHeader: React.FC<CalendarHeaderProps> = ({\r\n  days,\r\n  today,\r\n  beforeHandler,\r\n  todayHandler,\r\n  nextHandler,\r\n  onChangeCalendarView,\r\n  isMonth: isMonthData,\r\n}) => {\r\n  const isMonth = useToggle(isMonthData);\r\n  const startDay = days[0];\r\n  const endDay = days[days.length - 1];\r\n\r\n  const handleCalendarView = (value: boolean) => {\r\n    if (!value) {\r\n      isMonth.onUnset();\r\n      onChangeCalendarView(CalendarViewEnum.Week);\r\n    } else {\r\n      isMonth.onSet();\r\n      onChangeCalendarView(CalendarViewEnum.Month);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.CalendarHeader}>\r\n      <div className={s.CalendarHeaderCol}>\r\n        <div className={s.CalendarHeaderMonth}>{today.format(\"MMMM\")}</div>\r\n        <div className={s.CalendarHeaderRange}>\r\n          {moment(startDay).format(\"D MMMM\")} -{\" \"}\r\n          {moment(endDay).format(\"D MMMM\")}\r\n        </div>\r\n      </div>\r\n      <div className={s.CalendarHeaderCol}>\r\n        <div onClick={beforeHandler} className={s.CalendarHeaderArrow}>\r\n          <ArrowLeftIcon className={s.CalendarHeaderArrowIcon} />\r\n        </div>\r\n        <div onClick={todayHandler} className={s.CalendarHeaderToday}>\r\n          Сегодня\r\n        </div>\r\n        <div onClick={nextHandler} className={s.CalendarHeaderArrow}>\r\n          <ArrowRightIcon className={s.CalendarHeaderArrowIcon} />\r\n        </div>\r\n        <Switch\r\n          onChange={handleCalendarView}\r\n          checked={isMonth.value}\r\n          onColor=\"#5860ff\"\r\n          uncheckedIcon={false}\r\n          checkedIcon={false}\r\n          className={s.CalendarHeaderSwitch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useToggle = (currentValue: boolean | undefined = false) => {\r\n  const [value, setValue] = useState(currentValue);\r\n\r\n  return {\r\n    value,\r\n    onToggle: () => setValue(!value),\r\n    onSet: () => setValue(true),\r\n    onUnset: () => setValue(false),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport s from \"./CalendarPopup.module.sass\";\r\nimport { IScheduleEvent } from \"components/ScheduleEvent/ScheduleEvent\";\r\nimport moment from \"moment\";\r\n\r\nexport interface CalendarPopupProps extends IScheduleEvent {\r\n  style?: React.CSSProperties;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const CalendarPopup = React.forwardRef<\r\n  HTMLDivElement,\r\n  CalendarPopupProps\r\n>(({ style, title, dateFrom, dateTo, onClose }, ref) => {\r\n  return (\r\n    <div ref={ref} className={s.CalendarPopup} style={style}>\r\n      <div className={s.CalendarPopupHeader}>\r\n        <CloseIcon onClick={onClose} className={s.CalendarPopupClose} />\r\n      </div>\r\n      <div className={s.CalendarPopupContent}>\r\n        <div className={s.CalendarPopupTitle}>{title}</div>\r\n        <div className={s.CalendarPopupDate}>\r\n          {moment.unix(dateFrom).format(\"D.MM.YYYY\")} -\r\n          {moment.unix(dateTo).format(\"D.MM.YYYY\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport s from \"./ScheduleEvent.module.sass\";\r\n\r\nexport interface IScheduleEvent {\r\n  id: string;\r\n  dateFrom: number;\r\n  dateTo: number;\r\n  title: string;\r\n}\r\n\r\nexport interface ScheduleEventProps extends IScheduleEvent {\r\n  onClick?: (e: React.MouseEvent) => void;\r\n  className?: string;\r\n}\r\n\r\nexport const ScheduleEvent = React.forwardRef<\r\n  HTMLDivElement,\r\n  ScheduleEventProps\r\n>(({ title, onClick }, ref) => {\r\n  return (\r\n    <div onClick={onClick} className={s.ScheduleEvent} ref={ref}>\r\n      {title}\r\n    </div>\r\n  );\r\n});\r\n","import { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nimport s from \"./CalendarGrid.module.sass\";\r\n\r\nimport { CalendarViewEnum } from \"../Calendar\";\r\nimport { CalendarPopup } from \"../CalendarPopup/CalendarPopup\";\r\nimport {\r\n  IScheduleEvent,\r\n  ScheduleEvent,\r\n} from \"../../ScheduleEvent/ScheduleEvent\";\r\n\r\nexport interface CalendarGridProps {\r\n  today: moment.Moment;\r\n  days: CalendarViewEnum;\r\n  items: Array<IScheduleEvent>;\r\n  dayArr: Array<any>;\r\n}\r\nexport const CalendarGrid: React.FC<CalendarGridProps> = ({\r\n  days,\r\n  items,\r\n  dayArr,\r\n  today,\r\n}) => {\r\n  const [chosenEvent, setChosenEvent] = useState<string | null>(null);\r\n\r\n  const handleChoseEvent = (value: string | null) => () => {\r\n    if (!value || value !== chosenEvent) {\r\n      setChosenEvent(value);\r\n    } else {\r\n      setChosenEvent(null);\r\n    }\r\n  };\r\n\r\n  const isCurrentDay = (day: any) => {\r\n    return moment().isSame(day, \"day\");\r\n  };\r\n  const isCurrentMonth = (day: any) => today.isSame(day, \"month\");\r\n\r\n  const isSomeDateFrom = (dateFrom: any, id: any) => {\r\n    return items.some((i) => i.dateFrom === dateFrom && i.id !== id);\r\n  };\r\n\r\n  return (\r\n    <div className={s.CalendarGrid}>\r\n      {dayArr.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className={clsx(s.CalendarGridItem, {\r\n            [s.CalendarGridItem_active]: isCurrentMonth(item),\r\n          })}\r\n        >\r\n          <div\r\n            className={s.CalendarGridDay}\r\n            style={{ marginTop: index >= 7 ? `16px` : \"0\" }}\r\n          >\r\n            {index < 7 && (\r\n              <div className={s.CalendarGridDayWeekName}>\r\n                {moment(item).add(1, \"d\").format(\"dd\")}\r\n              </div>\r\n            )}\r\n            {days === CalendarViewEnum.Month && (\r\n              <span\r\n                className={clsx(s.CalendarGridDayNumber, {\r\n                  [s.CalendarGridDayNumber_active]: isCurrentDay(item),\r\n                })}\r\n              >\r\n                {item.format(\"D\")}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={clsx(s.CalendarGridEvents, {\r\n              [s.CalendarGridEvents_flex]: isSomeDateFrom(\r\n                item.dateFrom,\r\n                item.id\r\n              ),\r\n            })}\r\n          >\r\n            {items\r\n              .filter(\r\n                (event) =>\r\n                  event.dateFrom >= item.format(\"X\") &&\r\n                  event.dateFrom <= item.clone().endOf(\"day\").format(\"X\")\r\n              )\r\n              .map((event, indexEvent) => (\r\n                <Tippy\r\n                  key={event.id}\r\n                  visible={chosenEvent === event.id}\r\n                  onClickOutside={handleChoseEvent(null)}\r\n                  content={\r\n                    <CalendarPopup\r\n                      onClose={handleChoseEvent(null)}\r\n                      {...event}\r\n                    />\r\n                  }\r\n                  placement=\"right\"\r\n                >\r\n                  <ScheduleEvent\r\n                    onClick={handleChoseEvent(event.id)}\r\n                    {...event}\r\n                  />\r\n                </Tippy>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  PathMatch,\r\n  Routes as Switch,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { Location } from \"history\";\r\n\r\nexport interface RouteType extends RouteProps {\r\n  layout?: React.FC;\r\n}\r\n\r\nexport interface RoutesCompProps {\r\n  location?: Location;\r\n  match?: PathMatch;\r\n}\r\n\r\nexport const Routes = (routes: RouteType[]) => () =>\r\n  (\r\n    <Switch>\r\n      {routes.map((props, i) => {\r\n        const element = props.layout ? (\r\n          <props.layout>{props.element}</props.layout>\r\n        ) : (\r\n          props.element\r\n        );\r\n\r\n        return <Route key={props.path} {...props} element={element} />;\r\n      })}\r\n    </Switch>\r\n  );\r\n","import React from \"react\";\r\nimport { useAtom } from \"jotai\";\r\nimport { eventsAtom } from \"store/calendar\";\r\nimport { Calendar } from \"../../components/Calendar/Calendar\";\r\n\r\nexport interface CalendarPageProps {}\r\n\r\nexport const CalendarPage: React.FC<CalendarPageProps> = () => {\r\n  const [events] = useAtom(eventsAtom);\r\n\r\n  return (\r\n    <>\r\n      <Calendar items={events} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { CALENDAR_PAGE_ROUTE } from \"routes/routesNames\";\r\n\r\nexport interface IndexPageProps {}\r\n\r\nexport const IndexPage: React.FC<IndexPageProps> = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    navigate(CALENDAR_PAGE_ROUTE);\r\n  }, [navigate]);\r\n\r\n  return <></>;\r\n};\r\n","import { Routes, RouteType } from \"hocs/Routes\";\r\nimport { MainLayout } from \"layouts/Main/MainLayout\";\r\nimport { CalendarPage } from \"pages/calendar/CalendarPage\";\r\nimport { IndexPage } from \"pages/index/IndexPage\";\r\nimport { CALENDAR_PAGE_ROUTE, INDEX_PAGE_ROUTE } from \"./routesNames\";\r\n\r\nconst routes: RouteType[] = [\r\n  {\r\n    path: INDEX_PAGE_ROUTE,\r\n    element: <IndexPage />,\r\n    layout: MainLayout,\r\n  },\r\n  {\r\n    path: CALENDAR_PAGE_ROUTE,\r\n    element: <CalendarPage />,\r\n    layout: MainLayout,\r\n  },\r\n];\r\n\r\nexport const AppRoutes = Routes(routes);\r\n","import React from \"react\";\nimport \"moment/locale/ru\";\nimport moment from \"moment\";\n\nimport { AppRoutes } from \"routes\";\n\nmoment.updateLocale(\"ru\", {\n  week: { dow: 0 },\n  calendar: {\n    lastDay: \"[вчера]\",\n    sameDay: \"[сегодня]\",\n    nextDay: \"[завтра]\",\n    lastWeek: \"[прошлая неделя]\",\n    nextWeek: \"[следующая неделя]\",\n    sameElse: \"L\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <>\n      <AppRoutes />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"styles/app.sass\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarHeader\":\"CalendarHeader_CalendarHeader__wKVBr\",\"CalendarHeaderCol\":\"CalendarHeader_CalendarHeaderCol__1bxtC\",\"CalendarHeaderMonth\":\"CalendarHeader_CalendarHeaderMonth__1RXgt\",\"CalendarHeaderRange\":\"CalendarHeader_CalendarHeaderRange__WPv1c\",\"CalendarHeaderArrow\":\"CalendarHeader_CalendarHeaderArrow__2hAV4\",\"CalendarHeaderArrowIcon\":\"CalendarHeader_CalendarHeaderArrowIcon__3NkMw\",\"CalendarHeaderToday\":\"CalendarHeader_CalendarHeaderToday__2Bopu\",\"CalendarHeaderSwitch\":\"CalendarHeader_CalendarHeaderSwitch__jNKrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarGrid\":\"CalendarGrid_CalendarGrid__c4Iuu\",\"CalendarGridItem\":\"CalendarGrid_CalendarGridItem__2ad9B\",\"CalendarGridItem_active\":\"CalendarGrid_CalendarGridItem_active__3Ku0T\",\"CalendarGridDay\":\"CalendarGrid_CalendarGridDay__15EHl\",\"CalendarGridDayInWeek\":\"CalendarGrid_CalendarGridDayInWeek__2S2SN\",\"CalendarGridDayNumber\":\"CalendarGrid_CalendarGridDayNumber__1Z3fq\",\"CalendarGridDayNumber_active\":\"CalendarGrid_CalendarGridDayNumber_active__1dvrQ\",\"CalendarGridEvents\":\"CalendarGrid_CalendarGridEvents__3Q8wy\",\"CalendarGridEvents_flex\":\"CalendarGrid_CalendarGridEvents_flex__1NL9F\"};"],"sourceRoot":""}